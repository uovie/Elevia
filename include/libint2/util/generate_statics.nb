(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     25763,        596]
NotebookOptionsPosition[     25318,        579]
NotebookOutlinePosition[     25677,        595]
CellTagsIndexPosition[     25634,        592]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"swapBraKet", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"swapBra", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"swapKet", "=", "True"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"permuteBra", "[", 
      RowBox[{"c_", ",", "swapBra_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{"swapBra", ",", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"c", "+", "1"}], ")"}], ",", "2"}], "]"}], ",", "c"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"permuteKet", "[", 
      RowBox[{"c_", ",", "swapKet_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{"swapKet", ",", 
       RowBox[{"2", "+", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"c", "-", "1"}], ")"}], ",", "2"}], "]"}]}], ",", "c"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"permuteBraKet", "[", 
      RowBox[{"c_", ",", "swapBra_", ",", "swapKet_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "<", "2"}], ",", 
       RowBox[{"permuteBra", "[", 
        RowBox[{"c", ",", "swapBra"}], "]"}], ",", 
       RowBox[{"permuteKet", "[", 
        RowBox[{"c", ",", "swapKet"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"permute", "[", 
      RowBox[{
      "braket_", ",", "c_", ",", "swapBraKet_", ",", "swapBra_", ",", 
       "swapKet_"}], "]"}], ":=", 
     RowBox[{"Switch", "[", 
      RowBox[{"braket", ",", "\[IndentingNewLine]", "\"\<xxxx\>\"", ",", 
       RowBox[{"permuteBraKet", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"swapBraKet", ",", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"c", "+", "2"}], ")"}], ",", "4"}], "]"}], ",", "c"}], 
          "]"}], ",", "swapBra", ",", "swapKet"}], "]"}], ",", "\"\<xsxx\>\"",
        ",", 
       RowBox[{"If", "[", 
        RowBox[{"swapKet", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"c", "\[Equal]", "1"}], ",", "2", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"c", "\[Equal]", "2"}], ",", "1", ",", "0"}], "]"}]}], 
          "]"}], ",", "c"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"xx", "|", "xx"}], ")"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "index", " ", "1"}], ":", " ", 
     RowBox[{"swapBraKet", "\[IndentingNewLine]", "index", " ", "2"}], ":", 
     " ", 
     RowBox[{"swapBra", "\[IndentingNewLine]", "index", " ", "3"}], ":", " ", 
     
     RowBox[{"swapKet", "\[IndentingNewLine]", "index", " ", "4"}], ":", " ", 
     "DerivIdx"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WriteString", "[", 
     RowBox[{
     "\"\<stdout\>\"", ",", 
      "\"\<mapDerivIndex1_xxxx[2][2][2][12] = {\\n\>\""}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"WriteString", "[", 
        RowBox[{"\"\<stdout\>\"", ",", "\"\<{\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"\"\<stdout\>\"", ",", "\"\<{\>\""}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"WriteString", "[", 
              RowBox[{"\"\<stdout\>\"", ",", "\"\<{\>\""}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"c", "=", 
                 RowBox[{"Quotient", "[", 
                  RowBox[{"d", ",", "3"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"xyz", "=", 
                 RowBox[{"Mod", "[", 
                  RowBox[{"d", ",", "3"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"pc", "=", 
                 RowBox[{"permute", "[", 
                  RowBox[{"\"\<xxxx\>\"", ",", "c", ",", 
                   RowBox[{"swapBraKet", "\[Equal]", "1"}], ",", 
                   RowBox[{"swapBra", "\[Equal]", "1"}], ",", 
                   RowBox[{"swapKet", "\[Equal]", "1"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"WriteString", "[", 
                 RowBox[{"\"\<stdout\>\"", ",", 
                  RowBox[{
                   RowBox[{"pc", "*", "3"}], "+", "xyz"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"d", "\[Equal]", "11"}], ",", "\"\<}\>\"", ",", 
                    "\"\<,\>\""}], "]"}]}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"d", ",", "0", ",", "11"}], "}"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"WriteString", "[", 
              RowBox[{"\"\<stdout\>\"", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"swapKet", "==", "1"}], ",", "\"\<}\>\"", ",", 
                 "\"\<,\\n  \>\""}], "]"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"swapKet", ",", "0", ",", "1"}], "}"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"\"\<stdout\>\"", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"swapBra", "\[Equal]", "1"}], ",", "\"\<}\>\"", ",", 
              "\"\<,\\n \>\""}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"swapBra", ",", "0", ",", "1"}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"\"\<stdout\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"swapBraKet", "\[Equal]", "1"}], ",", "\"\<\\n};\\n\>\"", 
           ",", "\"\<,\\n\>\""}], "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"swapBraKet", ",", "0", ",", "1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"xs", "|", "xx"}], ")"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "index", " ", "1"}], ":", " ", 
     RowBox[{"swapKet", "\[IndentingNewLine]", "index", " ", "2"}], ":", " ", 
     "DerivIdx"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WriteString", "[", 
     RowBox[{
     "\"\<stdout\>\"", ",", "\"\<mapDerivIndex1_xsxx[2][9] = {\\n\>\""}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"WriteString", "[", 
        RowBox[{"\"\<stdout\>\"", ",", "\"\<{\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"Quotient", "[", 
            RowBox[{"d", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"xyz", "=", 
           RowBox[{"Mod", "[", 
            RowBox[{"d", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"pc", "=", 
           RowBox[{"permute", "[", 
            RowBox[{"\"\<xsxx\>\"", ",", "c", ",", "False", ",", "False", ",", 
             RowBox[{"swapKet", "\[Equal]", "1"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"\"\<stdout\>\"", ",", 
            RowBox[{
             RowBox[{"pc", "*", "3"}], "+", "xyz"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"d", "\[Equal]", "8"}], ",", "\"\<}\>\"", ",", 
              "\"\<,\>\""}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"d", ",", "0", ",", "8"}], "}"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"\"\<stdout\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"swapKet", "==", "1"}], ",", "\"\<\\n};\\n\>\"", ",", 
           "\"\<,\\n\>\""}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"swapKet", ",", "0", ",", "1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "upper", " ", "triangle", " ", "index", " ", "in", " ", "matrix", " ", 
      "of", " ", "size", " ", "n"}], ",", 
     RowBox[{
      RowBox[{"i", " ", "and", " ", "j", " ", "are", " ", "0"}], "-", 
      "based"}], ",", " ", 
     RowBox[{"i", "<", "j"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"uptridxord", "[", 
      RowBox[{"n_", ",", "i_", ",", "j_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"i", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "*", "n"}], ")"}], "-", "i", "-", "1"}], ")"}]}], 
        ")"}], "/", "2"}], "+", "j"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"uptridx", "[", 
      RowBox[{"n_", ",", "i_", ",", "j_"}], "]"}], "=", 
     RowBox[{"uptridxord", "[", 
      RowBox[{"n", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"i", ",", "j"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"xx", "|", "xx"}], ")"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "index", " ", "1"}], ":", " ", 
     RowBox[{"swapBraKet", "\[IndentingNewLine]", "index", " ", "2"}], ":", 
     " ", 
     RowBox[{"swapBra", "\[IndentingNewLine]", "index", " ", "3"}], ":", " ", 
     
     RowBox[{"swapKet", "\[IndentingNewLine]", "index", " ", "4"}], ":", " ", 
     "DerivIdx"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WriteString", "[", 
     RowBox[{
     "\"\<stdout\>\"", ",", "\"\<mapDerivIndex2_xxxx[2][2][2][\>\"", ",", 
      RowBox[{"uptridx", "[", 
       RowBox[{"12", ",", "11", ",", "11"}], "]"}], ",", "\"\<] = {\\n\>\""}],
      "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"WriteString", "[", 
        RowBox[{"\"\<stdout\>\"", ",", "\"\<{\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"\"\<stdout\>\"", ",", "\"\<{\>\""}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"WriteString", "[", 
              RowBox[{"\"\<stdout\>\"", ",", "\"\<{\>\""}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"c1", "=", 
                 RowBox[{"Quotient", "[", 
                  RowBox[{"d1", ",", "3"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"xyz1", "=", 
                 RowBox[{"Mod", "[", 
                  RowBox[{"d1", ",", "3"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"c2", "=", 
                 RowBox[{"Quotient", "[", 
                  RowBox[{"d2", ",", "3"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"xyz2", "=", 
                 RowBox[{"Mod", "[", 
                  RowBox[{"d2", ",", "3"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"pc1", "=", 
                 RowBox[{"permute", "[", 
                  RowBox[{"\"\<xxxx\>\"", ",", "c1", ",", 
                   RowBox[{"swapBraKet", "\[Equal]", "1"}], ",", 
                   RowBox[{"swapBra", "\[Equal]", "1"}], ",", 
                   RowBox[{"swapKet", "\[Equal]", "1"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"coord1", "=", 
                 RowBox[{
                  RowBox[{"pc1", "*", "3"}], "+", "xyz1"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"pc2", "=", 
                 RowBox[{"permute", "[", 
                  RowBox[{"c2", ",", 
                   RowBox[{"swapBraKet", "\[Equal]", "1"}], ",", 
                   RowBox[{"swapBra", "\[Equal]", "1"}], ",", 
                   RowBox[{"swapKet", "\[Equal]", "1"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"coord2", "=", 
                 RowBox[{
                  RowBox[{"pc2", "*", "3"}], "+", "xyz2"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"coord12", "=", 
                 RowBox[{"uptridx", "[", 
                  RowBox[{"12", ",", "coord1", ",", "coord2"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"WriteString", "[", 
                 RowBox[{"\"\<stdout\>\"", ",", "coord12", ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"d1", "\[Equal]", "11"}], "&&", 
                    RowBox[{"d2", "\[Equal]", "11"}]}], ",", "\"\<}\>\"", 
                    ",", "\"\<,\>\""}], "]"}]}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"d1", ",", "0", ",", "11"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"d2", ",", "d1", ",", "11"}], "}"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"WriteString", "[", 
              RowBox[{"\"\<stdout\>\"", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"swapKet", "==", "1"}], ",", "\"\<}\>\"", ",", 
                 "\"\<,\\n  \>\""}], "]"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"swapKet", ",", "0", ",", "1"}], "}"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"\"\<stdout\>\"", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"swapBra", "\[Equal]", "1"}], ",", "\"\<}\>\"", ",", 
              "\"\<,\\n \>\""}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"swapBra", ",", "0", ",", "1"}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"\"\<stdout\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"swapBraKet", "\[Equal]", "1"}], ",", "\"\<\\n};\\n\>\"", 
           ",", "\"\<,\\n\>\""}], "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"swapBraKet", ",", "0", ",", "1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"xs", "|", "xx"}], ")"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "index", " ", "1"}], ":", " ", 
     RowBox[{"swapKet", "\[IndentingNewLine]", "index", " ", "2"}], ":", " ", 
     "DerivIdx"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WriteString", "[", 
     RowBox[{"\"\<stdout\>\"", ",", "\"\<mapDerivIndex2_xsxx[2][\>\"", ",", 
      RowBox[{
       RowBox[{"uptridx", "[", 
        RowBox[{"9", ",", "8", ",", "8"}], "]"}], "+", "1"}], ",", 
      "\"\<] = {\\n\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"WriteString", "[", 
        RowBox[{"\"\<stdout\>\"", ",", "\"\<{\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"c1", "=", 
           RowBox[{"Quotient", "[", 
            RowBox[{"d1", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"xyz1", "=", 
           RowBox[{"Mod", "[", 
            RowBox[{"d1", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"c2", "=", 
           RowBox[{"Quotient", "[", 
            RowBox[{"d2", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"xyz2", "=", 
           RowBox[{"Mod", "[", 
            RowBox[{"d2", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"pc1", "=", 
           RowBox[{"permute", "[", 
            RowBox[{
            "\"\<xsxx\>\"", ",", "c1", ",", "False", ",", "False", ",", 
             RowBox[{"swapKet", "\[Equal]", "1"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"coord1", "=", 
           RowBox[{
            RowBox[{"pc1", "*", "3"}], "+", "xyz1"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pc2", "=", 
           RowBox[{"permute", "[", 
            RowBox[{
            "\"\<xsxx\>\"", ",", "c2", ",", "False", ",", "False", ",", 
             RowBox[{"swapKet", "\[Equal]", "1"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"coord2", "=", 
           RowBox[{
            RowBox[{"pc2", "*", "3"}], "+", "xyz2"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"coord12", "=", 
           RowBox[{"uptridx", "[", 
            RowBox[{"9", ",", "coord1", ",", "coord2"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"\"\<stdout\>\"", ",", "coord12", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"d1", "\[Equal]", "8"}], "&&", 
               RowBox[{"d2", "\[Equal]", "8"}]}], ",", "\"\<}\>\"", ",", 
              "\"\<,\>\""}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"d1", ",", "0", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"d2", ",", "d1", ",", "8"}], "}"}]}], "\[IndentingNewLine]",
         "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"\"\<stdout\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"swapKet", "==", "1"}], ",", "\"\<\\n};\>\"", ",", 
           "\"\<,\\n\>\""}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"swapKet", ",", "0", ",", "1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]"}]}]], "Input",\

 CellChangeTimes->{{3.674764776571274*^9, 3.67476494744415*^9}, {
   3.674764977570912*^9, 3.6747656175984497`*^9}, {3.674765649095984*^9, 
   3.674765696148759*^9}, {3.674765742065071*^9, 3.674765845119811*^9}, {
   3.67476615083463*^9, 3.674766164258288*^9}, {3.6747662011033688`*^9, 
   3.674766357986561*^9}, {3.674766465669677*^9, 3.67476674291999*^9}, {
   3.6747667931454477`*^9, 3.674766806206833*^9}, {3.6747668385362988`*^9, 
   3.674766841752125*^9}, {3.674766875191739*^9, 3.674766908078768*^9}, 
   3.674766949998165*^9, {3.674767018573295*^9, 3.6747670302277803`*^9}, {
   3.67476707105801*^9, 3.6747670835453157`*^9}, {3.674767592720882*^9, 
   3.674767741576429*^9}, {3.674767783610044*^9, 3.674767834258593*^9}, {
   3.674767984037602*^9, 3.6747679933674517`*^9}, {3.674768064824366*^9, 
   3.674768185177474*^9}, {3.674768229576709*^9, 3.674768274388036*^9}, {
   3.6747683209438562`*^9, 3.67476844906884*^9}, {3.674768707834406*^9, 
   3.674768753231401*^9}, {3.7395523180640707`*^9, 3.7395525350072517`*^9}, {
   3.7395525891738443`*^9, 3.739552620038293*^9}, {3.739552654409033*^9, 
   3.73955266847683*^9}, {3.739552715116434*^9, 3.739552778431549*^9}, {
   3.739552814190074*^9, 3.7395529009091473`*^9}, {3.739553029496993*^9, 
   3.73955305240984*^9}, 3.739553337753461*^9, {3.739553442245496*^9, 
   3.73955358058652*^9}, {3.739553631282585*^9, 3.739553669546027*^9}, {
   3.739553704261387*^9, 3.739553825153947*^9}, {3.739553877295171*^9, 
   3.739553992059292*^9}},ExpressionUUID->"48331a58-ab0b-4ec3-91f2-\
5bfb24f13eeb"],

Cell["\<\
mapDerivIndex1_xxxx[2][2][2][12] = {
{{{0,1,2,3,4,5,6,7,8,9,10,11},
  {0,1,2,3,4,5,9,10,11,6,7,8}},
 {{3,4,5,0,1,2,6,7,8,9,10,11},
  {3,4,5,0,1,2,9,10,11,6,7,8}}},
{{{6,7,8,9,10,11,0,1,2,3,4,5},
  {9,10,11,6,7,8,0,1,2,3,4,5}},
 {{6,7,8,9,10,11,3,4,5,0,1,2},
  {9,10,11,6,7,8,3,4,5,0,1,2}}}
};
mapDerivIndex1_xsxx[2][9] = {
{0,1,2,3,4,5,6,7,8},
{0,1,2,6,7,8,3,4,5}
};
mapDerivIndex2_xxxx[2][2][2][77] = {
{{{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,\
28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,\
54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77},
  {0,1,2,3,4,5,9,10,11,6,7,8,12,13,14,15,16,20,21,22,17,18,19,23,24,25,26,30,\
31,32,27,28,29,33,34,35,39,40,41,36,37,38,42,43,47,48,49,44,45,46,50,54,55,56,\
51,52,53,72,73,74,60,65,69,75,76,61,66,70,77,62,67,71,57,58,59,63,64,68}},
 {{33,34,35,3,14,24,36,37,38,39,40,41,42,43,4,15,25,44,45,46,47,48,49,50,5,16,\
26,51,52,53,54,55,56,0,1,2,6,7,8,9,10,11,12,13,17,18,19,20,21,22,23,27,28,29,\
30,31,32,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77},
  {33,34,35,3,14,24,39,40,41,36,37,38,42,43,4,15,25,47,48,49,44,45,46,50,5,16,\
26,54,55,56,51,52,53,0,1,2,9,10,11,6,7,8,12,13,20,21,22,17,18,19,23,30,31,32,\
27,28,29,72,73,74,60,65,69,75,76,61,66,70,77,62,67,71,57,58,59,63,64,68}}},
{{{57,58,59,60,61,62,6,17,27,36,44,51,63,64,65,66,67,7,18,28,37,45,52,68,69,\
70,71,8,19,29,38,46,53,72,73,74,9,20,30,39,47,54,75,76,10,21,31,40,48,55,77,\
11,22,32,41,49,56,0,1,2,3,4,5,12,13,14,15,16,23,24,25,26,33,34,35,42,43,50},
  {72,73,74,60,65,69,9,20,30,39,47,54,75,76,61,66,70,10,21,31,40,48,55,77,62,\
67,71,11,22,32,41,49,56,57,58,59,6,17,27,36,44,51,63,64,7,18,28,37,45,52,68,8,\
19,29,38,46,53,0,1,2,3,4,5,12,13,14,15,16,23,24,25,26,33,34,35,42,43,50}},
 {{57,58,59,60,61,62,36,44,51,6,17,27,63,64,65,66,67,37,45,52,7,18,28,68,69,\
70,71,38,46,53,8,19,29,72,73,74,39,47,54,9,20,30,75,76,40,48,55,10,21,31,77,\
41,49,56,11,22,32,33,34,35,3,14,24,42,43,4,15,25,50,5,16,26,0,1,2,12,13,23},
  {72,73,74,60,65,69,39,47,54,9,20,30,75,76,61,66,70,40,48,55,10,21,31,77,62,\
67,71,41,49,56,11,22,32,57,58,59,36,44,51,6,17,27,63,64,37,45,52,7,18,28,68,\
38,46,53,8,19,29,33,34,35,3,14,24,42,43,4,15,25,50,5,16,26,0,1,2,12,13,23}}}
};
mapDerivIndex2_xsxx[2][45] = {
{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,\
29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44},
{0,1,2,6,7,8,3,4,5,9,10,14,15,16,11,12,13,17,21,22,23,18,19,20,39,40,41,27,32,\
36,42,43,28,33,37,44,29,34,38,24,25,26,30,31,35}
};\
\>", "Print",
 CellChangeTimes->{
  3.674765248714476*^9, 3.674766084551916*^9, 3.67476615149643*^9, {
   3.674766205924663*^9, 3.6747662223150167`*^9}, {3.674766309925199*^9, 
   3.674766358727026*^9}, 3.674766883891292*^9, 3.6747669146179*^9, 
   3.674766989755609*^9, {3.674767079292404*^9, 3.674767084399452*^9}, {
   3.674767619414213*^9, 3.6747676434827423`*^9}, {3.67476767354434*^9, 
   3.674767742236402*^9}, {3.674767786234807*^9, 3.674767816956492*^9}, {
   3.674768438552652*^9, 3.6747684496973267`*^9}, 3.7395524071248817`*^9, {
   3.739552462236425*^9, 3.7395524858346043`*^9}, {3.739552520783126*^9, 
   3.739552535448954*^9}, 3.7395530549639587`*^9, 3.739553512063224*^9, {
   3.739553562244135*^9, 3.7395535814747477`*^9}, 3.73955363553979*^9, {
   3.739553737420326*^9, 3.739553746907968*^9}, {3.739553780484679*^9, 
   3.739553793670258*^9}, 3.739553825569635*^9, {3.739553913084408*^9, 
   3.739553992832736*^9}},ExpressionUUID->"ff298baa-8062-4e41-9747-\
56e86f696beb"]
}, Open  ]]
},
WindowSize->{808, 751},
WindowMargins->{{12, Automatic}, {Automatic, 24}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 21149, 490, 2824, "Input",ExpressionUUID->"48331a58-ab0b-4ec3-91f2-5bfb24f13eeb"],
Cell[21732, 514, 3570, 62, 483, "Print",ExpressionUUID->"ff298baa-8062-4e41-9747-56e86f696beb"]
}, Open  ]]
}
]
*)

